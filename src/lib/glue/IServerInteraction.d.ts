//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

///<reference path="../Guid.d.ts"/>
///<reference path="../Either.d.ts"/>
///<reference path="../Maybe.ts"/>
///<reference path="ICreateChannelRequest.d.ts"/>
///<reference path="IRealtimeChannel.d.ts"/>
///<reference path="IArgonMessageDto.d.ts"/>
///<reference path="IMessageEntity.d.ts"/>
///<reference path="IRealtimeServerMember.d.ts"/>
///<reference path="JoinToChannelError.d.ts"/>
///<reference path="InviteCodeEntity.d.ts"/>
///<reference path="InviteCode.d.ts"/>
///<reference path="IUserDto.d.ts"/>

interface IServerInteraction
{
	CreateChannel(request: ICreateChannelRequest) : Promise<void>;
	DeleteChannel(serverId: Guid, channelId: Guid) : Promise<void>;
	GetChannels(serverId: Guid) : Promise<IRealtimeChannel[]>;
	GetMessages(channelId: Guid, count: number, offset: number) : Promise<IArgonMessageDto[]>;
	SendMessage(channelId: Guid, text: string, entities: IMessageEntity[]) : Promise<void>;
	GetMembers(serverId: Guid) : Promise<IRealtimeServerMember[]>;
	JoinToVoiceChannel(serverId: Guid, channelId: Guid) : Promise<Either<string, JoinToChannelError>>;
	DisconnectFromVoiceChannel(serverId: Guid, channelId: Guid) : Promise<void>;
	GetInviteCodes(serverId: Guid) : Promise<InviteCodeEntity[]>;
	CreateInviteCode(serverId: Guid, expiration: any) : Promise<InviteCode>;
	PrefetchUser(serverId: Guid, userId: Guid) : Promise<IUserDto>;
}
