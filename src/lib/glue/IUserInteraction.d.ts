//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

///<reference path="../Either.d.ts"/>
///<reference path="../Maybe.ts"/>
///<reference path="IUser.d.ts"/>
///<reference path="IServer.d.ts"/>
///<reference path="IUserCredentialsInput.d.ts"/>
///<reference path="INewUserCredentialsInput.d.ts"/>
///<reference path="InviteCode.d.ts"/>

interface IUserInteraction
{
	GetMe() : Promise<IUser>;
	CreateServer(request: any) : Promise<IServer>;
	GetServers() : Promise<IServer[]>;
	Authorize(input: IUserCredentialsInput) : Promise<Either<string, 'NONE' | 'BAD_CREDENTIALS' | 'REQUIRED_OTP' | 'BAD_OTP'>>;
	Registration(input: INewUserCredentialsInput) : Promise<Either<string, 'USERNAME_ALREADY_TAKEN' | 'USERNAME_RESERVED' | 'EMAIL_ALREADY_REGISTERED' | 'REGION_BANNED' | 'EMAIL_BANNED' | 'SSO_EMAILS_NOT_ALLOWED' | 'INTERNAL_ERROR'>>;
	JoinToServerAsync(inviteCode: InviteCode) : Promise<Either<IServer, 'NONE' | 'NOT_FOUND' | 'EXPIRED' | 'YOU_ARE_BANNED'>>;
}
